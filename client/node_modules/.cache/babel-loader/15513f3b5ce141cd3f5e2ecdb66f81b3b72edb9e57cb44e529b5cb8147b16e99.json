{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = supportedValue;\nvar _isInBrowser = require('is-in-browser');\nvar _isInBrowser2 = _interopRequireDefault(_isInBrowser);\nvar _prefix = require('./prefix');\nvar _prefix2 = _interopRequireDefault(_prefix);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nvar cache = {};\nvar el = void 0;\nif (_isInBrowser2['default']) el = document.createElement('p');\n\n/**\r\n * Returns prefixed value if needed. Returns `false` if value is not supported.\r\n *\r\n * @param {String} property\r\n * @param {String} value\r\n * @return {String|Boolean}\r\n * @api public\r\n */\nfunction supportedValue(property, value) {\n  // For server-side rendering.\n  if (!el) return value;\n\n  // It is a string or a number as a string like '1'.\n  // We want only prefixable values here.\n  if (typeof value !== 'string' || !isNaN(parseInt(value, 10))) return value;\n  var cacheKey = property + value;\n  if (cache[cacheKey] != null) return cache[cacheKey];\n\n  // IE can even throw an error in some cases, for e.g. style.content = 'bar'\n  try {\n    // Test value as it is.\n    el.style[property] = value;\n  } catch (err) {\n    cache[cacheKey] = false;\n    return false;\n  }\n\n  // Value is supported as it is.\n  if (el.style[property] !== '') {\n    cache[cacheKey] = value;\n  } else {\n    // Test value with vendor prefix.\n    value = _prefix2['default'].css + value;\n\n    // Hardcode test to convert \"flex\" to \"-ms-flexbox\" for IE10.\n    if (value === '-ms-flex') value = '-ms-flexbox';\n    el.style[property] = value;\n\n    // Value is supported with vendor prefix.\n    if (el.style[property] !== '') cache[cacheKey] = value;\n  }\n  if (!cache[cacheKey]) cache[cacheKey] = false;\n\n  // Reset style value.\n  el.style[property] = '';\n  return cache[cacheKey];\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","supportedValue","_isInBrowser","require","_isInBrowser2","_interopRequireDefault","_prefix","_prefix2","obj","__esModule","cache","el","document","createElement","property","isNaN","parseInt","cacheKey","style","err","css"],"sources":["C:/Users/adity/Desktop/D/extra/Blockchain/abc/ResumeVerificationUsingBlockchain/client/node_modules/css-vendor/lib/supported-value.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports['default'] = supportedValue;\r\n\r\nvar _isInBrowser = require('is-in-browser');\r\n\r\nvar _isInBrowser2 = _interopRequireDefault(_isInBrowser);\r\n\r\nvar _prefix = require('./prefix');\r\n\r\nvar _prefix2 = _interopRequireDefault(_prefix);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\nvar cache = {};\r\nvar el = void 0;\r\n\r\nif (_isInBrowser2['default']) el = document.createElement('p');\r\n\r\n/**\r\n * Returns prefixed value if needed. Returns `false` if value is not supported.\r\n *\r\n * @param {String} property\r\n * @param {String} value\r\n * @return {String|Boolean}\r\n * @api public\r\n */\r\nfunction supportedValue(property, value) {\r\n  // For server-side rendering.\r\n  if (!el) return value;\r\n\r\n  // It is a string or a number as a string like '1'.\r\n  // We want only prefixable values here.\r\n  if (typeof value !== 'string' || !isNaN(parseInt(value, 10))) return value;\r\n\r\n  var cacheKey = property + value;\r\n\r\n  if (cache[cacheKey] != null) return cache[cacheKey];\r\n\r\n  // IE can even throw an error in some cases, for e.g. style.content = 'bar'\r\n  try {\r\n    // Test value as it is.\r\n    el.style[property] = value;\r\n  } catch (err) {\r\n    cache[cacheKey] = false;\r\n    return false;\r\n  }\r\n\r\n  // Value is supported as it is.\r\n  if (el.style[property] !== '') {\r\n    cache[cacheKey] = value;\r\n  } else {\r\n    // Test value with vendor prefix.\r\n    value = _prefix2['default'].css + value;\r\n\r\n    // Hardcode test to convert \"flex\" to \"-ms-flexbox\" for IE10.\r\n    if (value === '-ms-flex') value = '-ms-flexbox';\r\n\r\n    el.style[property] = value;\r\n\r\n    // Value is supported with vendor prefix.\r\n    if (el.style[property] !== '') cache[cacheKey] = value;\r\n  }\r\n\r\n  if (!cache[cacheKey]) cache[cacheKey] = false;\r\n\r\n  // Reset style value.\r\n  el.style[property] = '';\r\n\r\n  return cache[cacheKey];\r\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAAC,SAAS,CAAC,GAAGE,cAAc;AAEnC,IAAIC,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,aAAa,GAAGC,sBAAsB,CAACH,YAAY,CAAC;AAExD,IAAII,OAAO,GAAGH,OAAO,CAAC,UAAU,CAAC;AAEjC,IAAII,QAAQ,GAAGF,sBAAsB,CAACC,OAAO,CAAC;AAE9C,SAASD,sBAAsB,CAACG,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAAE;AAEhG,IAAIE,KAAK,GAAG,CAAC,CAAC;AACd,IAAIC,EAAE,GAAG,KAAK,CAAC;AAEf,IAAIP,aAAa,CAAC,SAAS,CAAC,EAAEO,EAAE,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASZ,cAAc,CAACa,QAAQ,EAAEd,KAAK,EAAE;EACvC;EACA,IAAI,CAACW,EAAE,EAAE,OAAOX,KAAK;;EAErB;EACA;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAACe,KAAK,CAACC,QAAQ,CAAChB,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,OAAOA,KAAK;EAE1E,IAAIiB,QAAQ,GAAGH,QAAQ,GAAGd,KAAK;EAE/B,IAAIU,KAAK,CAACO,QAAQ,CAAC,IAAI,IAAI,EAAE,OAAOP,KAAK,CAACO,QAAQ,CAAC;;EAEnD;EACA,IAAI;IACF;IACAN,EAAE,CAACO,KAAK,CAACJ,QAAQ,CAAC,GAAGd,KAAK;EAC5B,CAAC,CAAC,OAAOmB,GAAG,EAAE;IACZT,KAAK,CAACO,QAAQ,CAAC,GAAG,KAAK;IACvB,OAAO,KAAK;EACd;;EAEA;EACA,IAAIN,EAAE,CAACO,KAAK,CAACJ,QAAQ,CAAC,KAAK,EAAE,EAAE;IAC7BJ,KAAK,CAACO,QAAQ,CAAC,GAAGjB,KAAK;EACzB,CAAC,MAAM;IACL;IACAA,KAAK,GAAGO,QAAQ,CAAC,SAAS,CAAC,CAACa,GAAG,GAAGpB,KAAK;;IAEvC;IACA,IAAIA,KAAK,KAAK,UAAU,EAAEA,KAAK,GAAG,aAAa;IAE/CW,EAAE,CAACO,KAAK,CAACJ,QAAQ,CAAC,GAAGd,KAAK;;IAE1B;IACA,IAAIW,EAAE,CAACO,KAAK,CAACJ,QAAQ,CAAC,KAAK,EAAE,EAAEJ,KAAK,CAACO,QAAQ,CAAC,GAAGjB,KAAK;EACxD;EAEA,IAAI,CAACU,KAAK,CAACO,QAAQ,CAAC,EAAEP,KAAK,CAACO,QAAQ,CAAC,GAAG,KAAK;;EAE7C;EACAN,EAAE,CAACO,KAAK,CAACJ,QAAQ,CAAC,GAAG,EAAE;EAEvB,OAAOJ,KAAK,CAACO,QAAQ,CAAC;AACxB"},"metadata":{},"sourceType":"script","externalDependencies":[]}